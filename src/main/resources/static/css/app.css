:root {
  --spacing-default: 0.5vw;
  --default-font-size: 100%;
  --default-font-family: Arial,Helvetica,sans-serif;

  --form-border-radius: 3px;
  --form-border-color: #c5c5c5;

  --btn-border-radius: 3px;
  --btn-border-color: #c5c5c5;
  --btn-text-color: #2b2b2b;
  --btn-selected-color: #999;

  --modal-overlay-opacity: 0.6;
  --dialog-icon-size: 50px;
  --dialog-border-radius: 3px;
  --dialog-highlight-color: #c5c5c5;

}


/************
 * Defaults *
 ************
 * Defines default styling for common HTML elements
 */

/**
 * Get rid of all those stupid fucking bits of padding on random elements which screw everything over... If I want
 * margins or padding, I'll add them myself. Or maybe it's really a non-issue and I just suck at this front-end crap.
 */
* {
  margin: 0;
  padding: 0;
  outline: 0 none;
  box-sizing: border-box;
}

body {
  font-size: var(--default-font-size);
  font-family: var(--default-font-family);
}

/**
 * Because I basically always use lists structurally
 */
ul {
  padding: 0;
  list-style-type: none;
}


button {
  display: inline-block;
  margin: 0 var(--spacing-default);
  padding: var(--spacing-default);
  border-radius: var(--btn-border-radius);
  border: 1px outset var(--btn-border-color);
  color: var(--btn-text-color);
  background-color: #fff;
  font-size: 1em;
  cursor: pointer;
}
button:hover {
  color: #000;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 1.5px 5px 0 rgba(0, 0, 0, 0.19);
}
button:active,
button.toggle.selected {
  border-style: inset;
  background-color: var(--btn-selected-color);
  color: #000;
}


form,
form fieldset {
  margin: var(--spacing-default);
  padding: var(--spacing-default);
}
form fieldset {
  border-radius: var(--form-border-radius);
  border: 1px solid var(--form-border-color);
}
form label,
form input {
  margin: var(--spacing-default);
}


/**************
 * Structural *
 **************
 * The main structural elements of the page, eg. menus, headers, footers, etc.
 */

html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

body,
#header,
#content {
  padding: var(--spacing-default);
}

body {
  display: flex;
  flex-direction: column;
}
body #header {
  /* Don't grow or shrink from original size */
  flex: 0 0 auto;
}
body #content {
  /* Grow or shrink from original size to take up remaining vertical space */
  flex: 1 1 auto;
}

#content {
  display: flex;
  flex-direction: row;
}
#content #center {
  /* Grow or shrink from original size to take up remaining horizontal space */
  flex: 1 1 auto;
}


/**
 * Background of an overlay. Covers the background with a translucent element which cannot be clicked through. The
 * modal is centered inside.
 */
.modal-overlay {
  z-index: 1000;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  padding: var(--spacing-default);
  background-color: rgba(0, 0, 0, var(--modal-overlay-opacity));
}
/**
 * A "modal" element is an element which is shown on top of any other content. Any background content cannot be
 * interacted with while the modal is showing. Examples: dialog boxes, fullscreen images, etc. Must always be placed
 * inside a ".modal-overlay".
 */
.modal-overlay .modal {
  z-index: 1010;
  flex: 0 0 auto;
  display: block;
  max-width: 100%;
  max-height: 100%;
  background-color: #fff;
}

/**
 * Usually used in conjunction with ".modal". Represents a dialog box.
 */
.dialog {
  display: flex;
  flex-direction: column;
  border-radius: var(--dialog-border-radius);
  border: 1px solid var(--dialog-highlight-color);
}

.dialog .content {
  flex: 1 1 auto;
  overflow: auto;
}

.dialog .header,
.dialog .control {
  flex: 0 0 auto;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: var(--spacing-default);
  background-color: var(--dialog-highlight-color);
}
.dialog .header {
  justify-content: flex-start;
}
.dialog .control {
  justify-content: flex-end;
}

.dialog .header .icon,
.dialog .header .title {
  display: inline-block;
  padding: var(--spacing-default);
  border-radius: var(--dialog-border-radius);
}
.dialog .header .icon {
  flex: 0 1 auto;
  width: var(--dialog-icon-size);
  height: var(--dialog-icon-size);
}
.dialog .header .title {
  flex: 0 0 auto;
  font-size: 1.2em;
  font-weight: bold;
}
.dialog .header .control {
  flex: 0 0 auto;
  margin-left: auto;
}
.dialog .control button {
  flex: 0 0 auto;
}


/***********
 * Content *
 ***********
 * Application-specific content, ie. the context-specific bits and pieces inside the structural elements
 */

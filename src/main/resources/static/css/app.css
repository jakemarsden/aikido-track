:root {
  --spacing-default: 0.5vw;
  --default-border-radius: 4px;
  --default-font-size: 100%;
  --default-font-family: Arial,Helvetica,sans-serif;

  --form-spacing: var(--spacing-default);
  --form-border-radius: var(--default-border-radius);
  --form-border-color: #c5c5c5;
  --form-focus-border-color: #939393;
  --form-disabled-color: #e3e3e3;
  --form-input-min-width: 10em;
  --form-input-preferred-width: 16em;
  --form-input-number-min-width: 4em;
  --form-input-number-preferred-width: 6em;

  --table-spacing: var(--spacing-default);
  --table-border-color: #111;
  --table-cell-separator-color: #ddd;
  --table-row-color: #fff;
  --table-row-sorted-color: #f5f5f5;
  --table-row-stripe-color: #fffff2;
  --table-row-sorted-stripe-color: #ffffe8;
  --table-row-highlight-color: #f2f2f2;
  --table-row-sorted-highlight-color: #e8e8e8;

  --btn-border-radius: var(--default-border-radius);
  --btn-border-color: #c5c5c5;
  --btn-text-color: #2b2b2b;
  --btn-selected-color: #999;

  --modal-overlay-opacity: 0.6;
  --dialog-min-width: 30%;
  --dialog-icon-size: 50px;
  --dialog-border-radius: var(--default-border-radius);
  --dialog-highlight-color: #c5c5c5;
}


/************
 * Defaults *
 ************
 * Defines default styling for common HTML elements
 */

/**
 * Get rid of all those stupid fucking bits of padding on random elements which screw everything over... If I want
 * margins or padding, I'll add them myself. Or maybe it's really a non-issue and I just suck at this front-end crap.
 */
* {
  margin: 0;
  padding: 0;
  outline: 0 none;
  box-sizing: border-box;
}

body {
  font-size: var(--default-font-size);
  font-family: var(--default-font-family);
}

/**
 * Because I basically always use lists structurally
 */
ul {
  padding: 0;
  list-style-type: none;
}


button {
  display: inline-block;
  margin: var(--spacing-default);
  padding: var(--spacing-default);
  border-radius: var(--btn-border-radius);
  border: 1px outset var(--btn-border-color);
  color: var(--btn-text-color);
  background-color: #fff;
  font-size: 1em;
  cursor: pointer;
}
button:hover {
  color: #000;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 1.5px 5px 0 rgba(0, 0, 0, 0.19);
}
button:active,
button.toggle.selected {
  border-style: inset;
  background-color: var(--btn-selected-color);
  color: #000;
}


/**
 * Example form markup:
 * <form>
 *     <fieldset>
 *         <ul>
 *             <li>
 *                 <label for="member-name">Name</label>
 *                 <input id="member-name" name="name" type="text"/>
 *             </li>
 *             <li>
 *                 <label for="member-type">Type</label>
 *                 <select id="member-type" name="type">
 *                     <option value="adult" selected>Adult</option>
 *                     <option value="junior">Junior</option>
 *                 </select>
 *             </li>
 *         </ul>
 *     </fieldset>
 * </form>
 */
form li {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
  margin: var(--form-spacing) 0;
}
form li > label:first-of-type {
  flex: 0 0 auto;
}
form li > label:first-of-type ~ * {
  flex: 1 0 var(--form-input-min-width);
  max-width: var(--form-input-preferred-width);
}
form li > label:first-of-type ~ input[type=number] {
  flex-basis: var(--form-input-number-min-width);
  max-width: var(--form-input-number-preferred-width);
}

form,
fieldset {
  margin: var(--form-spacing);
  padding: var(--form-spacing);
}
fieldset {
  border: 1px solid var(--form-border-color);
  border-radius: var(--form-border-radius);
}
fieldset:focus-within {
  border-color: var(--form-focus-border-color);
}

label {
  margin-right: var(--form-spacing);
}
input,
textarea,
select {
  padding: var(--form-spacing);
  border-top-left-radius: var(--form-border-radius);
  border: 1px solid var(--form-border-color);
}
input,
textarea {
  border-bottom-right-radius: var(--form-border-radius);
}
select {
  /* Looks slightly better on desktop due to the drop-down button. Looks like shit on Android... oh well */
  border-right: none;
}
input:focus,
textarea:focus,
select:focus {
  border-color: var(--form-focus-border-color);
}
input:disabled,
textarea:disabled,
select:disabled {
  background-color: var(--form-disabled-color);
  text-align: right;
}

/**
 * Get rid of the spin buttons on disabled numeric input elements
 */
input[type=number]:disabled {
  -moz-appearance: textfield;
}
input[type=number]:disabled::-webkit-outer-spin-button,
input[type=number]:disabled::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}


/**
 * Override defaults from DataTable library
 */
table.dataTable.table-border {
  border: 1px solid var(--table-border-color);
}
table.dataTable.no-footer {
  border-color: var(--table-border-color);
}
table.dataTable thead th,
table.dataTable thead td {
  padding: var(--table-spacing);
  border-bottom-color: var(--table-border-color);
  text-align: left;
}
/*
 table.dataTable.cell-border thead th,
 table.dataTable.cell-border thead td {
   border-right: 1px solid var(--table-cell-separator-color);
 }
 table.dataTable.cell-border thead th:first-child,
 table.dataTable.cell-border thead td:first-child {
   border-left: 1px solid var(--table-cell-separator-color);
 }
 */
table.dataTable thead > tr > th.sorting_asc,
table.dataTable thead > tr > th.sorting_desc,
table.dataTable thead > tr > th.sorting,
table.dataTable thead > tr > td.sorting_asc,
table.dataTable thead > tr > td.sorting_desc,
table.dataTable thead > tr > td.sorting {
  /* Make room for the column sort indicator background-image */
  padding-left: calc(18px + var(--table-spacing));
  padding-right: var(--table-spacing);
  background-position: center left;
}
table.dataTable thead .sorting {
  background-image: url("/image/sort_both.png");
}
table.dataTable thead .sorting_asc {
  background-image: url("/image/sort_asc.png");
}
table.dataTable thead .sorting_desc {
  background-image: url("/image/sort_desc.png");
}
table.dataTable tbody tr {
  background-color: var(--table-row-color);
}
table.dataTable.order-column.stripe tbody tr.even > .sorting_1,
table.dataTable.order-column tbody tr.even > .sorting_1,
table.dataTable.display tbody tr.even > .sorting_1 {
  background-color: var(--table-row-sorted-color);
}
table.dataTable.stripe tbody tr.odd,
table.dataTable.display tbody tr.odd {
  background-color: var(--table-row-stripe-color);
}
table.dataTable.order-column.stripe tbody tr.odd > .sorting_1,
table.dataTable.display tbody tr.odd > .sorting_1 {
  background-color: var(--table-row-sorted-stripe-color);
}
table.dataTable.hover tbody tr:hover,
table.dataTable.display tbody tr:hover {
  background-color: var(--table-row-highlight-color);
}
table.dataTable.order-column.hover tbody tr:hover > .sorting_1,
table.dataTable.display tbody tr:hover > .sorting_1 {
  background-color: var(--table-row-sorted-highlight-color);
}
table.dataTable tbody th,
table.dataTable tbody td {
  padding: var(--table-spacing);
}
table.dataTable.cell-border tbody th,
table.dataTable.cell-border tbody td,
table.dataTable.row-border tbody th,
table.dataTable.row-border tbody td,
table.dataTable.display tbody th,
table.dataTable.display tbody td {
  border-color: var(--table-cell-separator-color);
}


table th.control,
table td.control {
  /* Shrink the cell as much as possible to fit the content */
  /* See: https://stackoverflow.com/a/43615091 */
  width: 0.01px;
  white-space: nowrap;
}
table th.control button,
table td.control button {
  margin: 0 var(--spacing-default);
}
table th.control button:first-of-type,
table td.control button:first-of-type {
  margin-left: 0;
}
table th.control button:last-of-type,
table td.control button:last-of-type {
  margin-right: 0;
}


/**************
 * Structural *
 **************
 * The main structural elements of the page, eg. menus, headers, footers, etc.
 */

html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

body,
#header,
#content {
  padding: var(--spacing-default);
}

body {
  display: flex;
  flex-direction: column;
}
body #header {
  /* Don't grow or shrink from original size */
  flex: 0 0 auto;
}
body #content {
  /* Grow or shrink from original size to take up remaining vertical space */
  flex: 1 1 auto;
  overflow-y: auto;
}

#content {
  display: flex;
  flex-direction: row;
}
#content #center {
  /* Grow or shrink from original size to take up remaining horizontal space */
  flex: 1 1 auto;
}


/**
 * Background of an overlay. Covers the background with a translucent element which cannot be clicked through. The
 * modal is centered inside.
 */
.modal-overlay {
  z-index: 1000;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  padding: var(--spacing-default);
  background-color: rgba(0, 0, 0, var(--modal-overlay-opacity));
}
/**
 * A "modal" element is an element which is shown on top of any other content. Any background content cannot be
 * interacted with while the modal is showing. Examples: dialog boxes, fullscreen images, etc. Must always be placed
 * inside a ".modal-overlay".
 */
.modal-overlay .modal {
  z-index: 1010;
  flex: 0 0 auto;
  max-width: 100%;
  max-height: 100%;
  background-color: #fff;
}

/**
 * Usually used in conjunction with ".modal". Represents a dialog box.
 */
.dialog {
  display: flex;
  flex-direction: column;
  min-width: var(--dialog-min-width);
  border-radius: var(--dialog-border-radius);
  border: 1px solid var(--dialog-highlight-color);
}

.dialog .content {
  flex: 1 1 auto;
  overflow: auto;
}

.dialog .header,
.dialog .control {
  flex: 0 0 auto;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: var(--spacing-default);
  background-color: var(--dialog-highlight-color);
}
.dialog .header {
  justify-content: flex-start;
}
.dialog .control {
  justify-content: flex-end;
}
.dialog .control button {
  flex: 0 0 auto;
  margin-top: 0;
  margin-bottom: 0;
}

.dialog .header .icon,
.dialog .header .title,
.dialog .header .control {
  padding: var(--spacing-default);
  font-size: 1.2em;
  font-weight: bold;
}
.dialog .header .title {
  flex: 0 0 auto;
}
.dialog .header .icon {
  flex: 0 0 auto;
  margin-left: var(--spacing-default);
}
.dialog .header .control {
  flex: 1 0 auto;
  padding-top: 0;
  padding-bottom: 0;
}
.dialog .header .control button:not(:first-of-type) {
  margin-left: 0;
}


/***********
 * Content *
 ***********
 * Application-specific content, ie. the context-specific bits and pieces inside the structural elements
 */

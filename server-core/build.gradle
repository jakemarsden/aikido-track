plugins {
    id 'groovy'
    id 'project-report'
    id 'org.springframework.boot' version '2.0.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
}

group 'com.jakemarsden'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.0.3.RELEASE'
    }

    dependencies {
        dependencySet(group: 'org.hibernate', version: '5.3.1.Final') {
            entry 'hibernate-core'
            entry 'hibernate-java8'
        }
        dependency group: 'org.webjars', name: 'datatables', version: '1.10.19'
        dependency group: 'org.webjars', name: 'font-awesome', version: '5.2.0'
        dependency group: 'org.webjars', name: 'handlebars', version: '4.0.11-1'
        dependency group: 'org.webjars', name: 'jquery', version: '3.3.1-1'
        dependency group: 'org.webjars', name: 'requirejs', version: '2.3.5'
        dependency group: 'org.webjars', name: 'webjars-locator', version: '0.34'
    }
}

dependencies {
    runtime group: 'com.h2database', name: 'h2'
    compile group: 'org.apache.commons', name: 'commons-lang3'
    compile group: 'org.codehaus.groovy', name: 'groovy-all'
    runtime group: 'org.hibernate', name: 'hibernate-java8'
    runtime group: 'org.springframework.boot', name: 'spring-boot-devtools'
    runtime group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'

    runtime group: 'org.webjars', name: 'datatables'
    runtime group: 'org.webjars', name: 'font-awesome'
    runtime group: 'org.webjars', name: 'handlebars'
    runtime group: 'org.webjars', name: 'jquery'
    runtime group: 'org.webjars', name: 'requirejs'
    runtime group: 'org.webjars', name: 'webjars-locator'
}

final webappSources = "$projectDir/../webapp/src"
final webappGeneratedResources = "$buildDir/generated-resources/main"

task generateWebappResources(type: Copy) {
    from webappSources
    into webappGeneratedResources
}

sourceSets {
    main {
        java.srcDirs = []
        output.dir webappGeneratedResources, builtBy: generateWebappResources
    }
    test.java.srcDirs = []
}

bootRun {
    // Alternative to bootRun.sourceResources(sourceSets.main) for webapp sources only
    classpath = files([webappSources], classpath)
            .filter { it != file(webappGeneratedResources) }
}

springBoot {
    buildInfo {
        properties {
            time = null
        }
    }
}

wrapper {
    gradleVersion = '4.7'
    distributionType = 'ALL'
}
